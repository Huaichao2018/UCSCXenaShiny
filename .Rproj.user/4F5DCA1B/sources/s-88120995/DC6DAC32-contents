server = function(input, output){
  output$Xenasummary <- renderPlotly({
    p = plot_dat %>% 
      #  filter(XenaHostNames == "gdcHub") %>%
      ggplot(aes(x = XenaHostNames, y = Sample_percent, fill = XenaCohorts, text = N)) +
      geom_bar(stat = 'identity',width = 0.8, color = "black") + 
      coord_flip() +
      labs(y = "", x = "") +
      theme_bw(base_size = 15) + #去除背景色
      theme(panel.grid =element_blank()) + #去除网格线
      theme(panel.border = element_blank()) + #去除外层边框
      theme(axis.line = element_line(colour = "black")) + #沿坐标轴显示直线
      theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(), axis.text.x = element_blank()) + #去除x轴
      guides(fill = F) +
      guides(color = F) +
      ggtitle("Cohort Numbers")
    
    ggplotly(p, tooltip = c("XenaHostNames", "XenaCohorts", "N")) %>% layout(showlegend = FALSE)
  })
    output$Xenasummary1 <- renderPlotly({
      p = plot_dat_new %>% 
        #  filter(XenaHostNames == "gdcHub") %>%
        ggplot(aes(x = XenaHostNames, y = SampleCount_percent, fill = XenaCohorts, text = SampleCount_sum)) +
        geom_bar(stat = 'identity',width = 0.8, color = "black") + 
        coord_flip() +
        labs(y = "", x = "") +
        theme_bw(base_size = 15) + #去除背景色
        theme(panel.grid =element_blank()) + #去除网格线
        theme(panel.border = element_blank()) + #去除外层边框
        theme(axis.line = element_line(colour = "black")) + #沿坐标轴显示直线
        theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(), axis.text.x = element_blank()) + #去除x轴
        guides(fill = F) +
        guides(color = F) +
        ggtitle("Sample Numbers")
      
      ggplotly(p, tooltip = c("XenaHostNames", "XenaCohorts", "SampleCount_sum")) %>% layout(showlegend = FALSE)
    
  })
}
